apiVersion: v1
kind: ConfigMap
metadata:
    name: bookie-config
data:
    PULSAR_MEM: "\" -Xms64m -Xmx256m -XX:MaxDirectMemorySize=256m\""
    dbStorage_writeCacheMaxSizeMb: "32" # Write cache size (direct memory)
    dbStorage_readAheadCacheMaxSizeMb: "32" # Read cache size (direct memory)
    zkServers: zk-cs
    statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
---

## BookKeeper servers need to access the local disks and the pods
## cannot be moved across different nodes.
## For this reason, we run BK as a daemon set, one for each node in the
## cluster, unless restricted by label selectors
apiVersion: apps/v1
kind: DaemonSet
metadata:
    name: bookie
    labels:
        app: pulsar
        component: bookkeeper

spec:
    selector:
      matchLabels:
        app: pulsar
        component: bookkeeper
    template:
        metadata:
            labels:
                app: pulsar
                component: bookkeeper
                # Specify cluster to allow aggregation by cluster in
                # the metrics
                cluster: local
            annotations:
                prometheus.io/scrape: "true"
                prometheus.io/port: "8000"

        spec:
            containers:
              - name: bookie
                image: apachepulsar/pulsar-all:latest
                command: ["sh", "-c"]
                args:
                  - >
                    bin/apply-config-from-env.py conf/bookkeeper.conf &&
                    bin/apply-config-from-env.py conf/pulsar_env.sh &&
                    bin/pulsar bookie
                ports:
                  - containerPort: 3181
                    hostPort: 3181
                    name: client
                  - containerPort: 8000
                    hostPort: 8000
                    name: monitoring

                envFrom:
                  - configMapRef:
                        name: bookie-config
                env:
                  - name: advertisedAddress
                    valueFrom:
                        fieldRef:
                            fieldPath: status.hostIP

                volumeMounts:
                  - name: journal-disk
                    mountPath: /pulsar/data/bookkeeper/journal
                  - name: ledgers-disk
                    mountPath: /pulsar/data/bookkeeper/ledgers

                # bin/bookkeeper shell bookiesanity

            initContainers:
                # The first time, initialize BK metadata in zookeeper
                 # Otherwise ignore error if it's already there
              - name: bookie-metaformat
                image: apachepulsar/pulsar-all:latest
                command: ["sh", "-c"]
                args:
                  - >
                    bin/apply-config-from-env.py conf/bookkeeper.conf &&
                    bin/bookkeeper shell metaformat --nonInteractive || true;
                envFrom:
                  - configMapRef:
                        name: bookie-config

            volumes:
                # Mount local disks
              - name: journal-disk
                hostPath:
                    path: /mnt/disks/ssd0
              - name: ledgers-disk
                hostPath:
                    path: /mnt/disks/ssd1

---

##
## Define the Bookie headless service
## In practice, in this case, it is only useful to have a view of
## all the bookie pods that are present
##
apiVersion: v1
kind: Service
metadata:
    name: bookkeeper
    labels:
        app: pulsar
        component: bookkeeper
spec:
    ports:
      - port: 3181
        name: server
      - port: 8000
        name: monitoring
    clusterIP: None
    selector:
        app: pulsar
        component: bookkeeper
